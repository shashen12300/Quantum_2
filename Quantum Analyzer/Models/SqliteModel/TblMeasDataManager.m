	// =======================================================
// This file is auto generated by [Convert Excel To .plist and .sqlite] convertor,
// do not edit by youself!
// >>>> by HuMinghua <<<<  2016年12月27日 下午3:55:35
// ======================================================


#import "TblMeasData.h"
#import "TblMeasDataManager.h"
#import <FMDB.h>

#pragma mark - 
#define AUTO_PLIST_TBLMEASDATA_PATH   [[NSBundle mainBundle] pathForResource:@"TblMeasData" ofType:@"plist"]

#pragma mark - 
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_AGE_RANGE_LOW      0   // n_Age_Range_Low
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_AGE_RANGE_HIGH      1   // n_Age_Range_High
#define AUTO_PLIST_TBLMEASDATA_INDEX_STR_WEIGHT_TYPE      2   // str_Weight_Type
#define AUTO_PLIST_TBLMEASDATA_INDEX_STR_ITEM_SUB_NAME      3   // str_Item_Sub_Name
#define AUTO_PLIST_TBLMEASDATA_INDEX_STR_ITEM_MAIN_NAME      4   // str_Item_Main_Name
#define AUTO_PLIST_TBLMEASDATA_INDEX_STR_RESULT      5   // str_Result
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_ITEM_SUB_ID      6   // n_Item_Sub_ID
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_RESULT      7   // n_Result
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_ITEM_MAIN_ID      8   // n_Item_Main_ID
#define AUTO_PLIST_TBLMEASDATA_INDEX_N_WEIGHT_TYPE      9   // n_Weight_Type

#pragma mark - 
@implementation TblMeasDataManager{
    FMDatabase  *_db;
}

static TblMeasDataManager *_sTblMeasDataManager = nil;

#pragma mark -
+ (TblMeasDataManager *) sharedManager
{
    @synchronized(self) {
        if (!_sTblMeasDataManager) {
            _sTblMeasDataManager = [[self alloc] init];
        }
    }
    return _sTblMeasDataManager;
}
- (id)init
{
    self = [super init];
    if (self) {
        // 文件路径
        NSString *filePath = [DocumentFile ProductPath:@"TblMeasData.sqlite"];
        // 实例化FMDataBase对象
        _db = [FMDatabase databaseWithPath:filePath];
    }
    return self;
}

#pragma mark -
- (TblMeasData *)getHealthStateSubItemID:(NSString *)subItemID Age:(NSString *)age type:(NSString *)type {
    
   // NSString *sqliteStr = [NSString stringWithFormat:@"select * from TblMeasData where n_Item_Sub_ID = %@ and str_Weight_Type = %@  and n_Age_Range_Low < %@ and n_Age_Range_High > %@",subItemID,type,age,age];
    NSInteger weight_type;
    if ([type isEqualToString:@"重瘦"]) {
        weight_type = -2;
    }else if ([type isEqualToString:@"轻瘦"]) {
        weight_type = -1;
    }
    else if ([type isEqualToString:@"标准"]) {
        weight_type = 0;
    }else if ([type isEqualToString:@"轻胖"]) {
        weight_type = 1;
    }else if ([type isEqualToString:@"重胖"]) {
        weight_type = 2;
    }
    NSString *sqliteStr = [NSString stringWithFormat:@"select * from TblMeasData where n_Item_Sub_ID= %@ and n_Weight_Type = %ld and n_Age_Range_Low < %@ and n_Age_Range_High >= %@",subItemID,weight_type,age,age];

    NSArray *array = [self queryAllSqlite:sqliteStr];
   return  array[0];
}
- (NSArray *)allTblMeasDatas
{
    NSString *sqliteStr = @"SELECT * FROM TblMeasData";
    return [self queryAllSqlite:sqliteStr];
}

- (NSMutableArray *)queryAllSqlite:(NSString *)sqliteStr {
    [_db open];
    
    NSMutableArray *dataArray = [[NSMutableArray alloc] init];
    
    FMResultSet *res = [_db executeQuery:sqliteStr];
    
    while ([res next]) {
        TblMeasData *report = [[TblMeasData alloc] init];
        report.n_Age_Range_Low = [res stringForColumn:@"n_Age_Range_Low"];
        report.n_Age_Range_High = [res stringForColumn:@"n_Age_Range_High"];
        report.str_Weight_Type = [res stringForColumn:@"str_Weight_Type"];
        report.str_Item_Sub_Name = [res stringForColumn:@"str_Item_Sub_Name"];
        report.str_Item_Main_Name = [res stringForColumn:@"str_Item_Main_Name"];
        report.str_Result = [res stringForColumn:@"str_Result"];
        report.n_Item_Sub_ID = [res stringForColumn:@"n_Item_Sub_ID"];
        report.n_Result = [res stringForColumn:@"n_Result"];
        report.n_Item_Main_ID = [res stringForColumn:@"n_Item_Main_ID"];
        report.n_Weight_Type = [res stringForColumn:@"n_Weight_Type"];

        [dataArray addObject:report];
    }
    
    [_db close];
    
    return dataArray;
}


@end
